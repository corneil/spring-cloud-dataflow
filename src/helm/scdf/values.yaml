# Default values for scdf.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Global values
global:
  # Registry secret
  registry:
    secret:
      ref: ""
  imagePullPolicy: IfNotPresent
  imagePullSecrets: [ ]
  podSecurityContext: { }
  securityContext: { }
  startupProbe: { }
  livenessProbe: { }
  readinessProbe: { }
  resources: { }
  management:
    metrics:
      prometheus:
        enabled: false
        rsocket:
          enabled: false
#      export:
#        prometheus:
#          enabled: false
#          rsocket:
#            enabled: false
#            host: prometheus-rsocket-proxy
#            port: 7001

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "scdf-sa"

# Values used in Spring Cloud Data Flow Server deployment, configuration and service
server:
  image:
    repository: springcloud/spring-cloud-dataflow-server
    tag: "2.11.4-SNAPSHOT"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  contextPath:
  containerPort: 9393
  protocol: TCP
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      cpu: 1500m
      memory: 2048Mi
#    We usually recommend not to specify default resources and to leave this as a conscious
#    choice for the user after monitoring performance.
#    limits:
#      cpu: 4000m
#      memory: 4096Mi
  startupProbe:
    tcpSocket:
      port: http
    failureThreshold: 4
    initialDelaySeconds: 10
    timeoutSeconds: 3
    periodSeconds: 15
  livenessProbe:
    httpGet:
      path: /management/health/liveness
      port: http
    failureThreshold: 4
    initialDelaySeconds: 1
    timeoutSeconds: 3
    periodSeconds: 15
  readinessProbe:
    httpGet:
      path: /management/health/readiness
      port: http
    failureThreshold: 3
    initialDelaySeconds: 5
    timeoutSeconds: 3
    periodSeconds: 15
# If you override volumes you should include the following section unless you to not want to use the ConfigMap named scdf-server
#   - name: config
#     configMap:
#       name: scdf-server
#       items:
#         - key: 'application-kubernetes.yaml'
#           path: 'application-kubernetes.yaml'
  volumes: [ ]
#If you override volumeMounts you should include the following section unless you want to skip config or use a different mapping.
#  - name: config
#    mountPath: /workspace/config
#    readOnly: true
  volumeMounts: [ ]
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  # will become part of configmap for scdf-server.
  # configure spring.cloud.dataflow.task.platform properties below in configuration section
  config: { }
  #    management: {}
  #    spring: {}
  #    server: {}
  service:
    type: LoadBalancer
    port: 9393


# Values in Spring Cloud Skipper deployment, configuration and service
skipper:
  image:
    repository: springcloud/spring-cloud-skipper
    tag: "2.11.4-SNAPSHOT"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  contextPath:
  containerPort: 7577
  protocol: TCP
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  resources:
    requests:
      cpu: 1500m
      memory: 2048Mi
  #    We usually recommend not to specify default resources and to leave this as a conscious
  #    choice for the user. This also increases chances charts run on environments with little
  #    resources, such as Minikube. If you do want to specify resources, uncomment the following
  #    lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #    limit:
  #      cpu: 4000m
  #      memory: 4096Mi
  startupProbe:
    tcpSocket:
      port: http
    failureThreshold: 4
    initialDelaySeconds: 10
    timeoutSeconds: 3
    periodSeconds: 15
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: http
    failureThreshold: 4
    initialDelaySeconds: 1
    timeoutSeconds: 3
    periodSeconds: 15
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: http
    failureThreshold: 3
    initialDelaySeconds: 5
    timeoutSeconds: 3
    periodSeconds: 15
  # If you override volumes you should include the following section unless you to not want to use the ConfigMap named scdf-server
  #   - name: config
  #     configMap:
  #       name: scdf-skipper
  #       items:
  #         - key: 'application-kubernetes.yaml'
  #           path: 'application-kubernetes.yaml'
  volumes: [ ]
  #If you override volumeMounts you should include the following section unless you want to skip config or use a different mapping.
  #  - name: config
  #    mountPath: /workspace/config
  #    readOnly: true
  volumeMounts: [ ]
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }
  # will become part of configmap for scdf-skipper.
  # configure spring.cloud.skipper.server.platform below in configuration section
  config: { }
#    management: {}
#    spring: {}
#    server: {}
  service:
    type: LoadBalancer
    port: http

composed-task-runner:
  image:
    repository: springcloud/spring-cloud-dataflow-composed-task-runner
    tag: "2.11.4-SNAPSHOT"
    digest: ""

configuration:
  streamingEnabled: true
  batchEnabled: true
  stream:
    # entries will be added to spring.cloud.skipper.server.platform
    deployer:
  task:
    # entries will be added to spring.cloud.dataflow.task.platform
    deployer:
  dashboard:
    url: http://grafana:3000
